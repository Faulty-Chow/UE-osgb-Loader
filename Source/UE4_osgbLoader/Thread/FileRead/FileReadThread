#pragma once

#include "CoreMinimal.h"

#include <OpenThreads/Thread>
#include <OpenThreads/Atomic>
#include <osg/ref_ptr>
#include <osg/Node>
#include <osg/Referenced>

#include <string>
#include <queue>

class Geometry;
class PagedLOD;

//struct FileReadTask:public osg::Referenced
//{
//	std::string _filepath;
//	void (*Func_FileReadResponse)(osg::ref_ptr<osg::Node>&);
//};

//class FileReadThread :public OpenThreads::Thread
//{
//public:
//	~FileReadThread() = default;
//	virtual void run() override;
//
//private:
//	OpenThreads::Atomic _bDone;
//	OpenThreads::Mutex _queueMutex;
//	std::queue<osg::ref_ptr<FileReadTask>> _fileReadRequestQueue;
//};